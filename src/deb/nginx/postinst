#!/bin/bash

set -e

if [ "$1" != "configure" ]; then
	exit 0
fi

# Run triggers only on updates
if [ ! -e "/usr/local/tulio/data/users/" ]; then
	exit
fi

# Prevent running and causes issues with outdated tulio version
if ! id "tulioweb" &> /dev/null; then
	exit
fi

# Touch and set permisions on default log files on installation
update-rc.d tulio defaults > /dev/null
invoke-rc.d tulio start || true

# Adapt Port Listing in TULIO NGINX Backend
source /usr/local/tulio/func/syshealth.sh # Load syshealth functions

# Check if the function syshealth_adapt_tulio_nginx_listen_ports exists
if ! declare -f syshealth_adapt_tulio_nginx_listen_ports > /dev/null; then
	exit
fi
syshealth_adapt_tulio_nginx_listen_ports # Adapt port listing
syshealth_adapt_nginx_resolver

###############################################################
#                Initialize functions/variables               #
###############################################################

if [ -z "$TULIO" ]; then
	export TULIO='/usr/local/tulio'
	PATH=$PATH:/usr/local/tulio/bin
	export PATH
fi

# Check if preinstall hook exists
if [ -e "/etc/tuliocp/hooks/nginx/pre_install.sh" ]; then
	/etc/tuliocp/hooks/nginx/pre_install.sh
fi

# Load upgrade functions and variables
source /usr/local/tulio/func/main.sh
source /usr/local/tulio/func/upgrade.sh
source /usr/local/tulio.conf/tulio.conf
source /usr/local/tulio/install/upgrade/upgrade.conf

# Reset backend port
if [ -n "$BACKEND_PORT" ]; then
	/usr/local/tulio/bin/v-change-sys-port $BACKEND_PORT
fi

if [ -e "/etc/tuliocp/hooks/nginx/post_install.sh" ]; then
	/etc/tuliocp/hooks/nginx/post_install.sh
fi

# Restart tulio service
if [ -f "/etc/init.d/tulio" ]; then
	systemctl restart tulio > /dev/null 2>&1
fi
